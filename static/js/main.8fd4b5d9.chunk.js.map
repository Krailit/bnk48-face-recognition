{"version":3,"sources":["api/face.js","components/drawBox.js","components/showDescriptors.js","components/faceRecognition.js","components/cameraFaceDetect.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["MODEL_URL","useTinyModel","maxDescriptorDistance","_callee","regenerator_default","a","wrap","_context","prev","next","faceapi","stop","this","loadModels","OPTION","getFullFaceDescription","_x","_getFullFaceDescription","apply","arguments","_callee2","blob","img","fullDesc","_context2","sent","withFaceLandmarks","withFaceDescriptors","abrupt","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","DrawBox","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDescription","length","undefined","then","_ref","asyncToGenerator","mark","desc","match","setState","fd","detections","detection","state","findBestMatch","console","log","newProps","_this$props","imageWidth","boxColor","_this$state","box","i","relativeBox","dimension","_imageDims","_X","_Y","_y","_height","_width","_W","width","_H","height","react_default","createElement","key","style","position","border","borderColor","transform","concat","_label","backgroundColor","marginTop","color","Component","ShowDescriptors","update","display","flexDirection","alignContent","alignItems","padding","margin","wordBreak","borderStyle","toString","bnk48JSON","require","FaceRecognition","matcher","handleFileChange","_ref2","event","imageURL","URL","createObjectURL","target","files","handleImageChange","handleURLChange","_ref3","fetch","value","r","type","includes","_callee4","image","_args4","_context4","getImageDimension","Image","onload","imageDimension","src","handleDescriptorsCheck","showDescriptors","checked","WIDTH","document","documentElement","clientWidth","HEIGHT","alt","drawBox","id","onChange","accept","placeholder","pattern","size","components_showDescriptors","withRouter","CameraFaceDetect","capture","webcam","current","getScreenshot","React","createRef","facingMode","location","exact","_this2","interval","setInterval","clearInterval","videoConstraints","className","react_webcam_default","audio","ref","screenshotFormat","Header","Link","to","pathname","App","HashRouter","basename","process","components_Header","Route","path","render","routerProps","faceRecognition","component","Boolean","window","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8WAEMA,EAAY,YACZC,GAAe,EAEfC,EAAwB,8CAE9B,SAAAC,IAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,IAAkCV,GAD1C,cAAAO,EAAAE,KAAA,EAEQC,IAAkCV,GAF1C,cAAAO,EAAAE,KAAA,EAGQC,IAAiCV,GAHzC,wBAAAO,EAAAI,SAAAR,EAAAS,oEAMAC,GACA,IAAMC,EAAS,IAAIJ,IAAgCV,GAE5C,SAAee,EAAtBC,GAAA,OAAAC,EAAAC,MAAAN,KAAAO,sDAAO,SAAAC,EAAsCC,GAAtC,IAAAC,EAAAC,EAAA,OAAAnB,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EAEWC,IAAmBW,GAF9B,cAEDC,EAFCE,EAAAC,KAAAD,EAAAf,KAAA,EAMgBC,IACHY,EAAKR,GACpBY,kBAAkBzB,GAClB0B,sBATE,cAMDJ,EANCC,EAAAC,KAAAD,EAAAI,OAAA,SAUEL,GAVF,wBAAAC,EAAAb,SAAAS,EAAAR,gCAaA,SAAeiB,EAAtBC,GAAA,OAAAC,EAAAb,MAAAN,KAAAO,sDAAO,SAAAa,EAA6BC,GAA7B,IAAAC,EAAAC,EAAAC,EAAA,OAAAhC,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAEDyB,EAAUI,OAAOC,KAAKN,GACtBE,EAAqBD,EAAQM,IAC/B,SAAAC,GAAM,OACJ,IAAI/B,IACFuB,EAAYQ,GAAQC,KACpBT,EAAYQ,GAAQE,YAAYH,IAC9B,SAAAI,GAAU,OAAI,IAAIC,aAAaD,QAMnCR,EAAc,IAAI1B,IACpByB,EACAjC,GAhBGmC,EAAAT,OAAA,SAkBEQ,GAlBF,wBAAAC,EAAA1B,SAAAqB,EAAApB,oCC6DQkC,cAvFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAA1B,KAAAkC,IACjBE,EAAAV,OAAAY,EAAA,EAAAZ,CAAA1B,KAAA0B,OAAAa,EAAA,EAAAb,CAAAQ,GAAAM,KAAAxC,KAAMmC,KAgBRM,eAAiB,WAAwB,IAAvBN,EAAuB5B,UAAAmC,OAAA,QAAAC,IAAApC,UAAA,GAAAA,UAAA,GAAf6B,EAAKD,MACrBxB,EAA0BwB,EAA1BxB,SAAUa,EAAgBW,EAAhBX,YACZb,GACJA,EAASiC,KAAT,eAAAC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAAc,SAAAxD,EAAMyD,GAAN,IAAAC,EAAA,OAAAzD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNuC,EAAKc,SAAS,CAClBnB,YAAaiB,EAAKpB,IAAI,SAAAuB,GAAE,OAAIA,EAAGnB,aAC/BoB,WAAYJ,EAAKpB,IAAI,SAAAuB,GAAE,OAAIA,EAAGE,cAHpB,WAKNjB,EAAKkB,MAAMvB,cAAiBP,EALtB,CAAA7B,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMQuC,EAAKkB,MAAMvB,YAAYH,IAAI,SAAAI,GAAU,OACrDR,EAAY+B,cAAcvB,KAPlB,OAMNiB,EANMtD,EAAAkB,KASVuB,EAAKc,SAAS,CAAED,UAChBO,QAAQC,IAAIR,GAVF,wBAAAtD,EAAAI,SAAAR,EAAAS,SAAd,gBAAAI,GAAA,OAAAyC,EAAAvC,MAAAN,KAAAO,YAAA,KAlBF6B,EAAKkB,MAAQ,CACXvB,YAAa,KACbqB,WAAY,KACZH,MAAO,MALQb,mFAUjBpC,KAAKyC,mEAGmBiB,GACxB1D,KAAKyC,eAAeiB,oCAsBb,IAAAC,EAC0B3D,KAAKmC,MAA9ByB,EADDD,EACCC,WAAYC,EADbF,EACaE,SADbC,EAEuB9D,KAAKsD,MAA3BF,EAFDU,EAECV,WAAYH,EAFba,EAEab,MAChBc,EAAM,KA4CV,OA1CMX,IACJW,EAAMX,EAAWxB,IAAI,SAACyB,EAAWW,GAC/B,IAAMD,EAAMV,EAAUY,YAChBC,EAAYb,EAAUc,WACxBC,EAAKR,EAAaG,EAAI3D,GACtBiE,EAAMN,EAAIO,GAAKV,EAAaM,EAAUK,QAAWL,EAAUM,OAC3DC,EAAKb,EAAaG,EAAIW,MACtBC,EACDZ,EAAIa,OAAShB,EAAaM,EAAUK,QAAWL,EAAUM,OAC5D,OACEK,EAAApF,EAAAqF,cAAA,OAAKC,IAAKf,GACRa,EAAApF,EAAAqF,cAAA,OACEE,MAAO,CACLC,SAAU,WACVC,OAAQ,QACRC,YAAatB,EACbe,OAAQD,EACRD,MAAOD,EACPW,UAAS,aAAAC,OAAejB,EAAf,OAAAiB,OAAuBhB,EAAvB,SAGRpB,GAASA,EAAMe,IAA0B,YAApBf,EAAMe,GAAGsB,OAC/BT,EAAApF,EAAAqF,cAAA,KACEE,MAAO,CACLO,gBAAiB1B,EACjBqB,OAAQ,QACRC,YAAatB,EACba,MAAOD,EACPe,UAAW,EACXC,MAAO,OACPL,UAAS,kBAAAC,OAAoBV,EAApB,SAGV1B,EAAMe,GAAGsB,QAEV,UAOPT,EAAApF,EAAAqF,cAAA,WAAMf,UApFK2B,aC2DPC,cA1Db,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAA1B,KAAA2F,IACjBvD,EAAAV,OAAAY,EAAA,EAAAZ,CAAA1B,KAAA0B,OAAAa,EAAA,EAAAb,CAAAiE,GAAAnD,KAAAxC,KAAMmC,KAcRyD,OAAS,WAAwB,IACzBjF,GADyBJ,UAAAmC,OAAA,QAAAC,IAAApC,UAAA,GAAAA,UAAA,GAAf6B,EAAKD,OACfxB,SACAA,GACJA,EAASiC,KAAK,SAAAI,GACZZ,EAAKc,SAAS,CAAEnB,YAAaiB,EAAKpB,IAAI,SAAAuB,GAAE,OAAIA,EAAGnB,kBAjBnDI,EAAKkB,MAAQ,CACXvB,YAAa,MAHEK,oFAQjBpC,KAAK4F,2DAGmBlC,GACxB1D,KAAK4F,OAAOlC,oCAYL,IACC3B,EAAgB/B,KAAKsD,MAArBvB,YAER,OACE8C,EAAApF,EAAAqF,cAAA,OACEE,MAAO,CACLa,QAAS,OACTC,cAAe,SACfC,aAAc,SACdC,WAAY,WAGdnB,EAAApF,EAAAqF,cAAA,yBACG/C,EACCA,EAAYH,IAAI,SAACI,EAAYgC,GAAb,OACda,EAAApF,EAAAqF,cAAA,KACEC,IAAKf,EACLgB,MAAO,CACLiB,QAAS,GACTC,OAAQ,GACRC,UAAW,YACXC,YAAa,QACbjB,YAAa,SAGdnD,EAAWqE,cAGhB,aArDkBX,aCOxBY,EAAYC,EAAQ,IAGpBC,cACJ,SAAAA,EAAYrE,GAAO,IAAAC,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAA1B,KAAAwG,IACjBpE,EAAAV,OAAAY,EAAA,EAAAZ,CAAA1B,KAAA0B,OAAAa,EAAA,EAAAb,CAAA8E,GAAAhE,KAAAxC,KAAMmC,KAkBRsE,QAnBmB/E,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAmBT,SAAAxD,IAAA,IAAAiC,EAAA,OAAAhC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBoB,EAAcqF,GADhC,OACF9E,EADE7B,EAAAkB,KAERuB,EAAKc,SAAS,CAAE1B,gBAFR,wBAAA7B,EAAAI,SAAAR,EAAAS,SAnBSoC,EAwBnBsE,iBAxBmB,eAAAC,EAAAjF,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAwBA,SAAAvC,EAAMoG,GAAN,OAAApH,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACXuC,EAAKc,SAAS,CAClB2D,SAAUC,IAAIC,gBAAgBH,EAAMI,OAAOC,MAAM,MAFlC,OAIjB7E,EAAK8E,oBAJY,wBAAAtG,EAAAb,SAAAS,EAAAR,SAxBA,gBAAAI,GAAA,OAAAuG,EAAArG,MAAAN,KAAAO,YAAA,GAAA6B,EA+BnB+E,gBA/BmB,eAAAC,EAAA1F,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KA+BD,SAAA3B,EAAMwF,GAAN,IAAAnG,EAAA,OAAAjB,EAAAC,EAAAC,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACCwH,MAAMT,EAAMI,OAAOM,OAAO1E,KAAK,SAAA2E,GAAC,OAAIA,EAAE9G,SADvC,QACZA,EADYgB,EAAAZ,MAEP2G,KAAKC,SAAS,WACrBrF,EAAKc,SAAS,CACZ2D,SAAUC,IAAIC,gBAAgBtG,KAEhC2B,EAAK8E,qBANS,wBAAAzF,EAAA1B,SAAAqB,EAAApB,SA/BC,gBAAAkB,GAAA,OAAAkG,EAAA9G,MAAAN,KAAAO,YAAA,GAAA6B,EAyCnB8E,kBAzCmBxF,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAyCC,SAAA2E,IAAA,IAAAC,EAAAC,EAAArH,UAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cAAO8H,EAAPC,EAAAlF,OAAA,QAAAC,IAAAiF,EAAA,GAAAA,EAAA,GAAexF,EAAKkB,MAAMuD,SAA1BgB,EAAAhI,KAAA,EACZuC,EAAKc,SAAS,CAClBvC,SAAUR,EAAuBwH,KAFjB,OAIlBvF,EAAK0F,kBAAkBH,GAJL,wBAAAE,EAAA9H,SAAA2H,EAAA1H,SAzCDoC,EAgDnB0F,kBAAoB,SAAAjB,GAClB,IAAInG,EAAM,IAAIqH,MACdrH,EAAIsH,OAAS,WACX5F,EAAKc,SAAS,CACZ+E,eAAgB,CACdvD,MAAOhE,EAAIgE,MACXE,OAAQlE,EAAIkE,WAIlBlE,EAAIwH,IAAMrB,GA1DOzE,EA6DnB+F,uBAAyB,SAAAvB,GACvBxE,EAAKc,SAAS,CAAEkF,gBAAiBxB,EAAMI,OAAOqB,WA5D9CjG,EAAKkB,MAAQ,CACXuD,SAAU,KACVlG,SAAU,KACVa,YAAa,KACb4G,iBAAiB,EACjBH,eAAgB,KAChBK,MAAO,MARQlG,oFAajB,IAAIqC,EAAK8D,SAASC,gBAAgBC,YAC9BhE,EApBS,MAoBMA,EApBN,KAqBbzE,KAAKkD,SAAS,CAAEoF,MAAO7D,IACvBzE,KAAKyG,2CAiDE,IAAA3C,EAQH9D,KAAKsD,MANPgF,EAFKxE,EAELwE,MACAzB,EAHK/C,EAGL+C,SACAlG,EAJKmD,EAILnD,SACAa,EALKsC,EAKLtC,YACA4G,EANKtE,EAMLsE,gBACAH,EAPKnE,EAOLmE,eAGES,EAAS,EAKb,OAJMT,IACJS,EAAUJ,EAAQL,EAAerD,OAAUqD,EAAevD,OAI1DG,EAAApF,EAAAqF,cAAA,OACEE,MAAO,CACLa,QAAS,OACTC,cAAe,SACfE,WAAY,WAGdnB,EAAApF,EAAAqF,cAAA,OACEE,MAAO,CACLN,MAAO4D,EACP1D,OAAQ8D,IAGP7B,EACDhC,EAAApF,EAAAqF,cAAA,OACEE,MAAO,CACLC,SAAU,aAGZJ,EAAApF,EAAAqF,cAAA,OAAKE,MAAO,CAAEC,SAAU,aACtBJ,EAAApF,EAAAqF,cAAA,OAAKE,MAAO,CAAEN,MAAO4D,GAASJ,IAAKrB,EAAU8B,IAAI,cAEhDhI,EACDkE,EAAApF,EAAAqF,cAAC8D,EAAD,CACEjI,SAAUA,EACVa,YAAaA,EACboC,WAAY0E,EACZzE,SA/GD,YAiHC,MAEJ,MAGNgB,EAAApF,EAAAqF,cAAA,WACED,EAAApF,EAAAqF,cAAA,4BACAD,EAAApF,EAAAqF,cAAA,SACE+D,GAAG,eACHrB,KAAK,OACLsB,SAAU9I,KAAK0G,iBACfqC,OAAO,sBAETlE,EAAApF,EAAAqF,cAAA,WACAD,EAAApF,EAAAqF,cAAA,SACE0C,KAAK,MACL1F,KAAK,MACL+G,GAAG,MACHG,YAAY,qDACZC,QAAQ,aACRC,KAAK,KACLJ,SAAU9I,KAAKmH,kBAEjBtC,EAAApF,EAAAqF,cAAA,WACED,EAAApF,EAAAqF,cAAA,SACEhD,KAAK,cACL0F,KAAK,WACLa,QAASrI,KAAKsD,MAAM8E,gBACpBU,SAAU9I,KAAKmI,yBAEjBtD,EAAApF,EAAAqF,cAAA,kCAECsD,EAAkBvD,EAAApF,EAAAqF,cAACqE,EAAD,CAAiBxI,SAAUA,IAAe,cA/I3C+E,aAsJf0D,cAAW5C,oBC5JpBF,EAAYC,EAAQ,IAIpB8C,cACJ,SAAAA,EAAYlH,GAAO,IAAAC,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAA1B,KAAAqJ,IACjBjH,EAAAV,OAAAY,EAAA,EAAAZ,CAAA1B,KAAA0B,OAAAa,EAAA,EAAAb,CAAA2H,GAAA7G,KAAAxC,KAAMmC,KAgBRsE,QAjBmB/E,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAiBT,SAAAxD,IAAA,IAAAiC,EAAA,OAAAhC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBoB,EAAcqF,GADhC,OACF9E,EADE7B,EAAAkB,KAERuB,EAAKc,SAAS,CAAE1B,gBAFR,wBAAA7B,EAAAI,SAAAR,EAAAS,SAjBSoC,EAiCnBkH,QAjCmB5H,OAAAoB,EAAA,EAAApB,CAAAlC,EAAAC,EAAAsD,KAiCT,SAAAvC,IAAA,OAAAhB,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACFuC,EAAKc,SAAS,CAClBvC,SAAUR,EAAuBiC,EAAKmH,OAAOC,QAAQC,mBAF/C,wBAAA7I,EAAAb,SAAAS,EAAAR,SA/BRoC,EAAKmH,OAASG,IAAMC,YACpBvH,EAAKkB,MAAQ,CACX3C,SAAU,KACVa,YAAa,KACboI,WAAY,QANGxH,oFAYJ,SADFpC,KAAKmC,MAAM0H,SAASvG,OAE7BtD,KAAKkD,SAAS,CAAE0G,WAAY,CAAEE,MAAO,iBACvC9J,KAAKyG,sDAQa,IAAAsD,EAAA/J,KAElBA,KAAKgK,SAAWC,YAAY,WAC1BF,EAAKT,WACJ,oDAIHY,cAAclK,KAAKgK,2CASZ,IAAAlG,EACuC9D,KAAKsD,MAA3C3C,EADDmD,EACCnD,SAAUa,EADXsC,EACWtC,YACZ2I,EAAmB,CACvBzF,MA9CQ,IA+CRE,OA9CS,IA+CTgF,WALK9F,EACwB8F,YAO/B,OACE/E,EAAApF,EAAAqF,cAAA,OACEsF,UAAU,SACVpF,MAAO,CACLa,QAAS,OACTC,cAAe,SACfE,WAAY,WAGdnB,EAAApF,EAAAqF,cAAA,OAAKE,MAAO,CAAEN,MA5DR,IA4DsBE,OA3DrB,MA4DLC,EAAApF,EAAAqF,cAAA,OAAKE,MAAO,CAAEC,SAAU,WAAYP,MA7DhC,MA8DFG,EAAApF,EAAAqF,cAAA,OAAKE,MAAO,CAAEC,SAAU,aACtBJ,EAAApF,EAAAqF,cAACuF,EAAA5K,EAAD,CACE6K,OAAO,EACP5F,MAjEF,IAkEEE,OAjED,IAkEC2F,IAAKvK,KAAKuJ,OACViB,iBAAiB,aACjBL,iBAAkBA,KAGnBxJ,EACDkE,EAAApF,EAAAqF,cAAC8D,EAAD,CACEjI,SAAUA,EACVa,YAAaA,EACboC,WA5EF,IA6EEC,SAAU,SAEV,eA5Ee6B,aAoFhB0D,cAAWC,YC3EXoB,mLAdX,OACE5F,EAAApF,EAAAqF,cAAA,cACED,EAAApF,EAAAqF,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,UACA9F,EAAApF,EAAAqF,cAAC4F,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,gBAAiBtH,MAAO,UAA9C,eACe,KAEfuB,EAAApF,EAAAqF,cAAC4F,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,eAAgBtH,MAAO,SAA7C,cACc,aATDoC,aCuCNmF,2LA9BX,OACEhG,EAAApF,EAAAqF,cAAA,OAAKsF,UAAU,OACbvF,EAAApF,EAAAqF,cAACgG,EAAA,EAAD,CAAQC,SAAUC,2BAChBnG,EAAApF,EAAAqF,cAAA,OAAKsF,UAAU,SACbvF,EAAApF,EAAAqF,cAACmG,EAAD,MAEApG,EAAApF,EAAAqF,cAACoG,EAAA,EAAD,CACEpB,OAAK,EACLqB,KAAK,IACLC,OAAQ,SAAAC,GAAW,OACjBxG,EAAApF,EAAAqF,cAACwG,EAAD,CAAiBD,YAAaA,OAGlCxG,EAAApF,EAAAqF,cAACoG,EAAA,EAAD,CACEpB,OAAK,EACLqB,KAAK,SACLC,OAAQ,SAAAC,GAAW,OACjBxG,EAAApF,EAAAqF,cAACwG,EAAD,CAAiBD,YAAaA,OAIlCxG,EAAApF,EAAAqF,cAACoG,EAAA,EAAD,CAAOpB,OAAK,EAACqB,KAAK,gBAAgBI,UAAWlC,IAC7CxE,EAAApF,EAAAqF,cAACoG,EAAA,EAAD,CAAOpB,OAAK,EAACqB,KAAK,eAAeI,UAAWlC,cAxBtC3D,cCEE8F,QACW,cAA7BC,OAAO5B,SAAS6B,UAEe,UAA7BD,OAAO5B,SAAS6B,UAEhBD,OAAO5B,SAAS6B,SAASzI,MACvB,2DCZN0I,IAASP,OAAOvG,EAAApF,EAAAqF,cAAC8G,EAAD,MAASrD,SAASsD,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpJ,KAAK,SAAAqJ,GACjCA,EAAaC","file":"static/js/main.8fd4b5d9.chunk.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nconst MODEL_URL = '../models';\nconst useTinyModel = true;\n\nconst maxDescriptorDistance = 0.5;\n\nasync function loadModels() {\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n}\n\nloadModels();\nconst OPTION = new faceapi.TinyFaceDetectorOptions(MODEL_URL);\n\nexport async function getFullFaceDescription(blob) {\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nexport async function createMatcher(faceProfile) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(\n    member =>\n      new faceapi.LabeledFaceDescriptors(\n        faceProfile[member].name,\n        faceProfile[member].descriptors.map(\n          descriptor => new Float32Array(descriptor)\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n  return faceMatcher;\n}\n","import React, { Component } from 'react';\n\nclass DrawBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDescription();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getDescription(newProps);\n  }\n\n  getDescription = (props = this.props) => {\n    const { fullDesc, faceMatcher } = props;\n    if (!!fullDesc) {\n      fullDesc.then(async desc => {\n        await this.setState({\n          descriptors: desc.map(fd => fd.descriptor),\n          detections: desc.map(fd => fd.detection)\n        });\n        if (!!this.state.descriptors && !!faceMatcher) {\n          let match = await this.state.descriptors.map(descriptor =>\n            faceMatcher.findBestMatch(descriptor)\n          );\n          this.setState({ match });\n          console.log(match);\n        }\n      });\n    }\n  };\n\n  render() {\n    const { imageWidth, boxColor } = this.props;\n    const { detections, match } = this.state;\n    let box = null;\n\n    if (!!detections) {\n      box = detections.map((detection, i) => {\n        const box = detection.relativeBox;\n        const dimension = detection._imageDims;\n        let _X = imageWidth * box._x;\n        let _Y = (box._y * imageWidth * dimension._height) / dimension._width;\n        let _W = imageWidth * box.width;\n        let _H =\n          (box.height * imageWidth * dimension._height) / dimension._width;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: boxColor,\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n              {!!match && match[i] && match[i]._label !== 'unknown' ? (\n                <p\n                  style={{\n                    backgroundColor: boxColor,\n                    border: 'solid',\n                    borderColor: boxColor,\n                    width: _W,\n                    marginTop: 0,\n                    color: '#fff',\n                    transform: `translate(-3px,${_H}px)`\n                  }}\n                >\n                  {match[i]._label}\n                </p>\n              ) : null}\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return <div>{box}</div>;\n  }\n}\n\nexport default DrawBox;\n","import React, { Component } from 'react';\n\nclass ShowDescriptors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null\n    };\n  }\n\n  componentWillMount() {\n    this.update();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps);\n  }\n\n  update = (props = this.props) => {\n    let { fullDesc } = props;\n    if (!!fullDesc) {\n      fullDesc.then(desc => {\n        this.setState({ descriptors: desc.map(fd => fd.descriptor) });\n      });\n    }\n  };\n\n  render() {\n    const { descriptors } = this.state;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <h3>Descriptors</h3>\n        {!!descriptors\n          ? descriptors.map((descriptor, i) => (\n              <p\n                key={i}\n                style={{\n                  padding: 10,\n                  margin: 20,\n                  wordBreak: 'break-all',\n                  borderStyle: 'solid',\n                  borderColor: 'blue'\n                }}\n              >\n                {descriptor.toString()}\n              </p>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default ShowDescriptors;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from './drawBox';\nimport ShowDescriptors from './showDescriptors';\n\n//const WIDTH = 500; //photo display width\nconst MaxWidth = 800;\n//const WIDTH = document.documentElement.clientWidth;\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst boxColor = '#BE80B5';\n\nclass FaceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageURL: null,\n      fullDesc: null,\n      faceMatcher: null,\n      showDescriptors: false,\n      imageDimension: null,\n      WIDTH: null\n    };\n  }\n\n  componentWillMount() {\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({ WIDTH: _W });\n    this.matcher();\n  }\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n  };\n\n  handleFileChange = async event => {\n    await this.setState({\n      imageURL: URL.createObjectURL(event.target.files[0])\n    });\n    this.handleImageChange();\n  };\n\n  handleURLChange = async event => {\n    let blob = await fetch(event.target.value).then(r => r.blob());\n    if (blob.type.includes('image')) {\n      this.setState({\n        imageURL: URL.createObjectURL(blob)\n      });\n      this.handleImageChange();\n    }\n  };\n\n  handleImageChange = async (image = this.state.imageURL) => {\n    await this.setState({\n      fullDesc: getFullFaceDescription(image)\n    });\n    this.getImageDimension(image);\n  };\n\n  getImageDimension = imageURL => {\n    let img = new Image();\n    img.onload = () => {\n      this.setState({\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n    img.src = imageURL;\n  };\n\n  handleDescriptorsCheck = event => {\n    this.setState({ showDescriptors: event.target.checked });\n  };\n\n  render() {\n    const {\n      WIDTH,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      imageDimension\n    } = this.state;\n\n    let HEIGHT = 0;\n    if (!!imageDimension) {\n      HEIGHT = (WIDTH * imageDimension.height) / imageDimension.width;\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          {!!imageURL ? (\n            <div\n              style={{\n                position: 'relative'\n              }}\n            >\n              <div style={{ position: 'absolute' }}>\n                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\n              </div>\n              {!!fullDesc ? (\n                <DrawBox\n                  fullDesc={fullDesc}\n                  faceMatcher={faceMatcher}\n                  imageWidth={WIDTH}\n                  boxColor={boxColor}\n                />\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n\n        <div>\n          <p>Test image here</p>\n          <input\n            id=\"myFileUpload\"\n            type=\"file\"\n            onChange={this.handleFileChange}\n            accept=\".jpg, .jpeg, .png\"\n          />\n          <br />\n          <input\n            type=\"url\"\n            name=\"url\"\n            id=\"url\"\n            placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\n            pattern=\"https://.*\"\n            size=\"50\"\n            onChange={this.handleURLChange}\n          />\n          <div>\n            <input\n              name=\"descriptors\"\n              type=\"checkbox\"\n              checked={this.state.showDescriptors}\n              onChange={this.handleDescriptorsCheck}\n            />\n            <label>Show Descriptors</label>\n          </div>\n          {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FaceRecognition);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from './drawBox';\n\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst WIDTH = 480;\nconst HEIGHT = 480;\n\nclass CameraFaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: 'user'\n    };\n  }\n\n  componentWillMount() {\n    let mode = this.props.location.state;\n    if (mode === 'back')\n      this.setState({ facingMode: { exact: 'environment' } });\n    this.matcher();\n  }\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n  };\n\n  componentDidMount() {\n    // set interval capture image from webcam every 1000ms\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    await this.setState({\n      fullDesc: getFullFaceDescription(this.webcam.current.getScreenshot())\n    });\n  };\n\n  render() {\n    const { fullDesc, faceMatcher, facingMode } = this.state;\n    const videoConstraints = {\n      width: WIDTH,\n      height: HEIGHT,\n      facingMode: facingMode\n    };\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div style={{ width: WIDTH, height: HEIGHT }}>\n          <div style={{ position: 'relative', width: WIDTH }}>\n            <div style={{ position: 'absolute' }}>\n              <Webcam\n                audio={false}\n                width={WIDTH}\n                height={HEIGHT}\n                ref={this.webcam}\n                screenshotFormat=\"image/jpeg\"\n                videoConstraints={videoConstraints}\n              />\n            </div>\n            {!!fullDesc ? (\n              <DrawBox\n                fullDesc={fullDesc}\n                faceMatcher={faceMatcher}\n                imageWidth={WIDTH}\n                boxColor={'blue'}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CameraFaceDetect);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <Link to=\"/photo\">Photo </Link>\n        <Link to={{ pathname: '/camera-front', state: 'front' }}>\n          Front Camera{' '}\n        </Link>\n        <Link to={{ pathname: '/camera-back', state: 'back' }}>\n          Back Camera{' '}\n        </Link>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport FaceRecognition from './components/faceRecognition';\nimport CameraFaceDetect from './components/cameraFaceDetect';\nimport Header from './components/Header';\n//import { createBrowserHistory } from 'history';\nimport './App.css';\n\n//var hist = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"route\">\n            <Header />\n            {/* <Route exact path=\"/\" component={FaceRecognition} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={routerProps => (\n                <FaceRecognition routerProps={routerProps} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/photo\"\n              render={routerProps => (\n                <FaceRecognition routerProps={routerProps} />\n              )}\n            />\n            {/* <Route exact path=\"/photo\" component={FaceRecognition} /> */}\n            <Route exact path=\"/camera-front\" component={CameraFaceDetect} />\n            <Route exact path=\"/camera-back\" component={CameraFaceDetect} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}