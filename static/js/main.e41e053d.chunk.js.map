{"version":3,"sources":["api/face.js","components/drawBox.js","components/showDescriptors.js","components/faceRecognition.js","components/cameraFaceDetect.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["MODEL_URL","useTinyModel","maxDescriptorDistance","_callee","regenerator_default","a","wrap","_context","prev","next","console","log","process","faceapi","stop","this","loadModels","OPTION","inputSize","scoreThreshold","getFullFaceDescription","_x","_getFullFaceDescription","apply","arguments","_callee2","blob","img","fullDesc","_context2","sent","withFaceLandmarks","withFaceDescriptors","abrupt","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","isFaceDetectionModelLoaded","tinyFaceDetector","params","DrawBox","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDescription","length","undefined","then","_ref","asyncToGenerator","mark","desc","match","setState","fd","detections","detection","state","findBestMatch","newProps","_this$props","imageWidth","boxColor","_this$state","box","i","relativeBox","dimension","_imageDims","_X","_Y","_y","_height","_width","_W","width","_H","height","react_default","createElement","key","style","position","border","borderColor","transform","concat","_label","backgroundColor","marginTop","color","Component","ShowDescriptors","update","display","flexDirection","alignContent","alignItems","padding","margin","wordBreak","borderStyle","toString","bnk48JSON","require","FaceRecognition","matcher","handleFileChange","_ref2","event","imageURL","URL","createObjectURL","target","files","handleImageChange","handleURLChange","url","value","handleButtonClick","fetch","r","type","includes","_callee4","image","_args4","_context4","getImageDimension","Image","onload","imageDimension","src","handleDescriptorsCheck","showDescriptors","checked","WIDTH","modelLoaded","document","documentElement","clientWidth","HEIGHT","alt","drawBox","id","onChange","accept","className","placeholder","pattern","size","onClick","components_showDescriptors","withRouter","CameraFaceDetect","capture","webcam","current","getScreenshot","React","createRef","facingMode","location","exact","_this2","interval","setInterval","clearInterval","videoConstraints","react_webcam_default","audio","ref","screenshotFormat","Header","Link","to","pathname","App","BrowserRouter","basename","components_Header","Route","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e41e053d.chunk.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nconst MODEL_URL = 'https://supachaic.github.io/bnk48-face-recognition/models';\n// tiny_face_detector options\nconst useTinyModel = true;\n\nconst maxDescriptorDistance = 0.5;\n\nasync function loadModels() {\n  console.log(MODEL_URL);\n  console.log(process.env.PUBLIC_URL);\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n}\n\nloadModels();\nlet inputSize = 512;\nlet scoreThreshold = 0.5;\nconst OPTION = new faceapi.TinyFaceDetectorOptions({\n  inputSize,\n  scoreThreshold\n});\n\nexport async function getFullFaceDescription(blob) {\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nexport async function createMatcher(faceProfile) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(\n    member =>\n      new faceapi.LabeledFaceDescriptors(\n        faceProfile[member].name,\n        faceProfile[member].descriptors.map(\n          descriptor => new Float32Array(descriptor)\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n  return faceMatcher;\n}\n\nexport function isFaceDetectionModelLoaded() {\n  let result = faceapi.nets.tinyFaceDetector.params;\n  return result;\n}\n","import React, { Component } from 'react';\n\nclass DrawBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDescription();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getDescription(newProps);\n  }\n\n  getDescription = (props = this.props) => {\n    const { fullDesc, faceMatcher } = props;\n    if (!!fullDesc) {\n      fullDesc.then(async desc => {\n        await this.setState({\n          descriptors: desc.map(fd => fd.descriptor),\n          detections: desc.map(fd => fd.detection)\n        });\n        if (!!this.state.descriptors && !!faceMatcher) {\n          let match = await this.state.descriptors.map(descriptor =>\n            faceMatcher.findBestMatch(descriptor)\n          );\n          this.setState({ match });\n          console.log(match);\n        }\n      });\n    }\n  };\n\n  render() {\n    const { imageWidth, boxColor } = this.props;\n    const { detections, match } = this.state;\n    let box = null;\n\n    if (!!detections) {\n      box = detections.map((detection, i) => {\n        const box = detection.relativeBox;\n        const dimension = detection._imageDims;\n        let _X = imageWidth * box._x;\n        let _Y = (box._y * imageWidth * dimension._height) / dimension._width;\n        let _W = imageWidth * box.width;\n        let _H =\n          (box.height * imageWidth * dimension._height) / dimension._width;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: boxColor,\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n              {!!match && match[i] && match[i]._label !== 'unknown' ? (\n                <p\n                  style={{\n                    backgroundColor: boxColor,\n                    border: 'solid',\n                    borderColor: boxColor,\n                    width: _W,\n                    marginTop: 0,\n                    color: '#fff',\n                    transform: `translate(-3px,${_H}px)`\n                  }}\n                >\n                  {match[i]._label}\n                </p>\n              ) : null}\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return <div>{box}</div>;\n  }\n}\n\nexport default DrawBox;\n","import React, { Component } from 'react';\n\nclass ShowDescriptors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null\n    };\n  }\n\n  componentWillMount() {\n    this.update();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps);\n  }\n\n  update = (props = this.props) => {\n    let { fullDesc } = props;\n    if (!!fullDesc) {\n      fullDesc.then(desc => {\n        this.setState({ descriptors: desc.map(fd => fd.descriptor) });\n      });\n    }\n  };\n\n  render() {\n    const { descriptors } = this.state;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <h3>Descriptors</h3>\n        {!!descriptors\n          ? descriptors.map((descriptor, i) => (\n              <p\n                key={i}\n                style={{\n                  padding: 10,\n                  margin: 20,\n                  wordBreak: 'break-all',\n                  borderStyle: 'solid',\n                  borderColor: 'blue'\n                }}\n              >\n                {descriptor.toString()}\n              </p>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default ShowDescriptors;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getFullFaceDescription,\n  createMatcher,\n  isFaceDetectionModelLoaded\n} from '../api/face';\nimport DrawBox from './drawBox';\nimport ShowDescriptors from './showDescriptors';\n\nconst MaxWidth = 800;\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst boxColor = '#BE80B5';\n\nclass FaceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: null,\n      imageURL: null,\n      fullDesc: null,\n      faceMatcher: null,\n      showDescriptors: false,\n      imageDimension: null,\n      WIDTH: null,\n      modelLoaded: !!isFaceDetectionModelLoaded()\n    };\n  }\n\n  componentWillMount() {\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({ WIDTH: _W });\n    this.matcher();\n  }\n\n  componentDidMount() {\n    console.log(!!isFaceDetectionModelLoaded());\n  }\n\n  componentWillUpdate() {\n    console.log(!!isFaceDetectionModelLoaded());\n  }\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n  };\n\n  handleFileChange = async event => {\n    await this.setState({\n      imageURL: URL.createObjectURL(event.target.files[0])\n    });\n    this.handleImageChange();\n  };\n\n  handleURLChange = event => {\n    this.setState({ url: event.target.value });\n  };\n\n  handleButtonClick = async () => {\n    let blob = await fetch(this.state.url).then(r => r.blob());\n    if (blob.type.includes('image')) {\n      this.setState({\n        imageURL: URL.createObjectURL(blob)\n      });\n      this.handleImageChange();\n    }\n  };\n\n  handleImageChange = async (image = this.state.imageURL) => {\n    await this.setState({\n      fullDesc: getFullFaceDescription(image)\n    });\n    this.getImageDimension(image);\n  };\n\n  getImageDimension = imageURL => {\n    let img = new Image();\n    img.onload = () => {\n      this.setState({\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n    img.src = imageURL;\n  };\n\n  handleDescriptorsCheck = event => {\n    this.setState({ showDescriptors: event.target.checked });\n  };\n\n  render() {\n    const {\n      WIDTH,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      imageDimension,\n      modelLoaded\n    } = this.state;\n\n    let HEIGHT = 0;\n    if (!!imageDimension) {\n      HEIGHT = (WIDTH * imageDimension.height) / imageDimension.width;\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          {!!imageURL ? (\n            <div\n              style={{\n                position: 'relative'\n              }}\n            >\n              <div style={{ position: 'absolute' }}>\n                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\n              </div>\n              {!!fullDesc ? (\n                <DrawBox\n                  fullDesc={fullDesc}\n                  faceMatcher={faceMatcher}\n                  imageWidth={WIDTH}\n                  boxColor={boxColor}\n                />\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n\n        <div>\n          <p>Test image here</p>\n          <input\n            id=\"myFileUpload\"\n            type=\"file\"\n            onChange={this.handleFileChange}\n            accept=\".jpg, .jpeg, .png\"\n          />\n          <br />\n          <div className=\"URLInput\">\n            <input\n              type=\"url\"\n              name=\"url\"\n              id=\"url\"\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\n              pattern=\"https://.*\"\n              size=\"50\"\n              onChange={this.handleURLChange}\n            />\n            <button onClick={this.handleButtonClick}>Upload</button>\n          </div>\n          <p>{modelLoaded.toString()}</p>\n          <div>\n            <input\n              name=\"descriptors\"\n              type=\"checkbox\"\n              checked={this.state.showDescriptors}\n              onChange={this.handleDescriptorsCheck}\n            />\n            <label>Show Descriptors</label>\n          </div>\n          {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FaceRecognition);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from './drawBox';\n\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst WIDTH = 480;\nconst HEIGHT = 480;\n\nclass CameraFaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: 'user'\n    };\n  }\n\n  componentWillMount() {\n    let mode = this.props.location.state;\n    if (mode === 'back')\n      this.setState({ facingMode: { exact: 'environment' } });\n    this.matcher();\n  }\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n  };\n\n  componentDidMount() {\n    // set interval capture image from webcam every 1000ms\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    await this.setState({\n      fullDesc: getFullFaceDescription(this.webcam.current.getScreenshot())\n    });\n  };\n\n  render() {\n    const { fullDesc, faceMatcher, facingMode } = this.state;\n    const videoConstraints = {\n      width: WIDTH,\n      height: HEIGHT,\n      facingMode: facingMode\n    };\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div style={{ width: WIDTH, height: HEIGHT }}>\n          <div style={{ position: 'relative', width: WIDTH }}>\n            <div style={{ position: 'absolute' }}>\n              <Webcam\n                audio={false}\n                width={WIDTH}\n                height={HEIGHT}\n                ref={this.webcam}\n                screenshotFormat=\"image/jpeg\"\n                videoConstraints={videoConstraints}\n              />\n            </div>\n            {!!fullDesc ? (\n              <DrawBox\n                fullDesc={fullDesc}\n                faceMatcher={faceMatcher}\n                imageWidth={WIDTH}\n                boxColor={'blue'}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CameraFaceDetect);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <Link to=\"/photo\">Photo </Link>\n        <Link to={{ pathname: '/camera-front', state: 'front' }}>\n          Front Camera{' '}\n        </Link>\n        <Link to={{ pathname: '/camera-back', state: 'back' }}>\n          Back Camera{' '}\n        </Link>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport FaceRecognition from './components/faceRecognition';\nimport CameraFaceDetect from './components/cameraFaceDetect';\nimport Header from './components/Header';\n//import { createBrowserHistory } from 'history';\nimport './App.css';\n\n//var hist = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"route\">\n            <Header />\n            <Route exact path=\"/\" component={FaceRecognition} />\n            {/* <Route\n              exact\n              path=\"/\"\n              render={routerProps => (\n                <FaceRecognition routerProps={routerProps} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/photo\"\n              render={routerProps => (\n                <FaceRecognition routerProps={routerProps} />\n              )}\n            /> */}\n            <Route exact path=\"/photo\" component={FaceRecognition} />\n            <Route exact path=\"/camera-front\" component={CameraFaceDetect} />\n            <Route exact path=\"/camera-back\" component={CameraFaceDetect} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}