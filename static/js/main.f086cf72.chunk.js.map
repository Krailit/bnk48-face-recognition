{"version":3,"sources":["api/face.js","components/drawBox.js","components/showDescriptors.js","components/faceRecognition.js","components/cameraFaceDetect.js","components/Home.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["MODEL_URL","useTinyModel","maxDescriptorDistance","_callee","regenerator_default","a","wrap","_context","prev","next","faceapi","stop","this","loadModels","OPTION","inputSize","scoreThreshold","getFullFaceDescription","_x","_getFullFaceDescription","apply","arguments","_callee2","blob","img","fullDesc","_context2","sent","withFaceLandmarks","withFaceDescriptors","abrupt","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","isFaceDetectionModelLoaded","tinyFaceDetector","params","DrawBox","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDescription","asyncToGenerator","mark","match","_args","length","undefined","setState","fd","detections","detection","state","findBestMatch","console","log","newProps","_this$props","imageWidth","boxColor","_this$state","box","i","relativeBox","dimension","_imageDims","_X","_Y","_y","_height","_width","_W","width","_H","height","react_default","createElement","key","style","position","border","borderColor","transform","concat","_label","backgroundColor","marginTop","color","Component","ShowDescriptors","update","display","flexDirection","alignContent","alignItems","padding","margin","wordBreak","borderStyle","toString","bnk48JSON","require","FaceRecognition","matcher","isModelLoaded","handleFileChange","_ref2","event","imageURL","URL","createObjectURL","target","files","handleImageChange","handleURLChange","url","value","handleButtonClick","fetch","then","r","type","includes","_callee4","image","_args4","_context4","getImageDimension","Image","onload","imageDimension","src","handleDescriptorsCheck","showDescriptors","checked","WIDTH","document","documentElement","clientWidth","HEIGHT","alt","drawBox","id","onChange","accept","className","placeholder","pattern","size","onClick","components_showDescriptors","withRouter","CameraFaceDetect","setInputDevice","navigator","mediaDevices","enumerateDevices","_ref","devices","inputDevice","filter","device","kind","inputDeviceVideo","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","react_webcam_default","audio","ref","screenshotFormat","Home","href","Header","Link","to","pathname","App","BrowserRouter","basename","process","components_Header","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f086cf72.chunk.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nconst MODEL_URL = 'https://supachaic.github.io/bnk48-face-recognition/models';\n// tiny_face_detector options\nconst useTinyModel = true;\n\nconst maxDescriptorDistance = 0.5;\n\nasync function loadModels() {\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n}\n\nloadModels();\nlet inputSize = 512;\nlet scoreThreshold = 0.5;\nconst OPTION = new faceapi.TinyFaceDetectorOptions({\n  inputSize,\n  scoreThreshold\n});\n\nexport async function getFullFaceDescription(blob) {\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nexport async function createMatcher(faceProfile) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(\n    member =>\n      new faceapi.LabeledFaceDescriptors(\n        faceProfile[member].name,\n        faceProfile[member].descriptors.map(\n          descriptor => new Float32Array(descriptor)\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n  return faceMatcher;\n}\n\nexport function isFaceDetectionModelLoaded() {\n  return !!faceapi.nets.tinyFaceDetector.params;\n}\n","import React, { Component } from 'react';\n\nclass DrawBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDescription();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getDescription(newProps);\n  }\n\n  getDescription = async (props = this.props) => {\n    const { fullDesc, faceMatcher } = props;\n    if (!!fullDesc) {\n      await this.setState({\n        descriptors: fullDesc.map(fd => fd.descriptor),\n        detections: fullDesc.map(fd => fd.detection)\n      });\n      if (!!this.state.descriptors && !!faceMatcher) {\n        let match = await this.state.descriptors.map(descriptor =>\n          faceMatcher.findBestMatch(descriptor)\n        );\n        this.setState({ match });\n        console.log(match);\n      }\n    }\n  };\n\n  render() {\n    const { imageWidth, boxColor } = this.props;\n    const { detections, match } = this.state;\n    let box = null;\n\n    if (!!detections) {\n      box = detections.map((detection, i) => {\n        const box = detection.relativeBox;\n        const dimension = detection._imageDims;\n        let _X = imageWidth * box._x;\n        let _Y = (box._y * imageWidth * dimension._height) / dimension._width;\n        let _W = imageWidth * box.width;\n        let _H =\n          (box.height * imageWidth * dimension._height) / dimension._width;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: boxColor,\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n              {!!match && match[i] && match[i]._label !== 'unknown' ? (\n                <p\n                  style={{\n                    backgroundColor: boxColor,\n                    border: 'solid',\n                    borderColor: boxColor,\n                    width: _W,\n                    marginTop: 0,\n                    color: '#fff',\n                    transform: `translate(-3px,${_H}px)`\n                  }}\n                >\n                  {match[i]._label}\n                </p>\n              ) : null}\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return <div>{box}</div>;\n  }\n}\n\nexport default DrawBox;\n","import React, { Component } from 'react';\n\nclass ShowDescriptors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null\n    };\n  }\n\n  componentWillMount() {\n    this.update();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps);\n  }\n\n  update = (props = this.props) => {\n    let { fullDesc } = props;\n    if (!!fullDesc) {\n      this.setState({\n        descriptors: fullDesc.map(fd => fd.descriptor)\n      });\n    }\n  };\n\n  render() {\n    const { descriptors } = this.state;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <h3>Detail Descriptions</h3>\n        {!!descriptors\n          ? descriptors.map((descriptor, i) => (\n              <p\n                key={i}\n                style={{\n                  padding: 10,\n                  margin: 20,\n                  wordBreak: 'break-all',\n                  borderStyle: 'solid',\n                  borderColor: 'blue'\n                }}\n              >\n                <strong>Descriptor_{i}: </strong>\n                {descriptor.toString()}\n              </p>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default ShowDescriptors;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getFullFaceDescription,\n  createMatcher,\n  isFaceDetectionModelLoaded\n} from '../api/face';\nimport DrawBox from './drawBox';\nimport ShowDescriptors from './showDescriptors';\n\nconst MaxWidth = 800;\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst boxColor = '#BE80B5';\n\nclass FaceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: null,\n      imageURL: null,\n      fullDesc: null,\n      faceMatcher: null,\n      showDescriptors: false,\n      imageDimension: null,\n      WIDTH: null,\n      isModelLoaded: !!isFaceDetectionModelLoaded()\n    };\n  }\n\n  componentWillMount() {\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({ WIDTH: _W, isModelLoaded: !!isFaceDetectionModelLoaded() });\n    this.matcher();\n  }\n\n  componentDidMount() {\n    this.setState({ isModelLoaded: !!isFaceDetectionModelLoaded() });\n  }\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n    this.setState({ isModelLoaded: !!isFaceDetectionModelLoaded() });\n  };\n\n  handleFileChange = async event => {\n    await this.setState({\n      imageURL: URL.createObjectURL(event.target.files[0])\n    });\n    this.handleImageChange();\n  };\n\n  handleURLChange = event => {\n    this.setState({ url: event.target.value });\n  };\n\n  handleButtonClick = async () => {\n    let blob = await fetch(this.state.url).then(r => r.blob());\n    if (blob.type.includes('image')) {\n      this.setState({\n        imageURL: URL.createObjectURL(blob)\n      });\n      this.handleImageChange();\n    }\n  };\n\n  handleImageChange = async (image = this.state.imageURL) => {\n    await getFullFaceDescription(image).then(fullDesc =>\n      this.setState({ fullDesc })\n    );\n    this.getImageDimension(image);\n  };\n\n  getImageDimension = imageURL => {\n    let img = new Image();\n    img.onload = () => {\n      this.setState({\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n    img.src = imageURL;\n  };\n\n  handleDescriptorsCheck = event => {\n    this.setState({ showDescriptors: event.target.checked });\n  };\n\n  render() {\n    const {\n      WIDTH,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      imageDimension,\n      isModelLoaded\n    } = this.state;\n\n    let HEIGHT = 0;\n    if (!!imageDimension) {\n      HEIGHT = (WIDTH * imageDimension.height) / imageDimension.width;\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          {!!imageURL ? (\n            <div\n              style={{\n                position: 'relative'\n              }}\n            >\n              <div style={{ position: 'absolute' }}>\n                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\n              </div>\n              {!!fullDesc ? (\n                <DrawBox\n                  fullDesc={fullDesc}\n                  faceMatcher={faceMatcher}\n                  imageWidth={WIDTH}\n                  boxColor={boxColor}\n                />\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n\n        <div>\n          <p>Model Loaded: {isModelLoaded.toString()}</p>\n          <p>Input Image file or URL</p>\n          <input\n            id=\"myFileUpload\"\n            type=\"file\"\n            onChange={this.handleFileChange}\n            accept=\".jpg, .jpeg, .png\"\n          />\n          <br />\n          <div className=\"URLInput\">\n            <input\n              type=\"url\"\n              name=\"url\"\n              id=\"url\"\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\n              pattern=\"https://.*\"\n              size=\"30\"\n              onChange={this.handleURLChange}\n            />\n            <button onClick={this.handleButtonClick}>Upload</button>\n          </div>\n          <div>\n            <input\n              name=\"descriptors\"\n              type=\"checkbox\"\n              checked={this.state.showDescriptors}\n              onChange={this.handleDescriptorsCheck}\n            />\n            <label>Show Descriptions</label>\n          </div>\n          {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FaceRecognition);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from './drawBox';\n\nconst bnk48JSON = require('../descriptors/bnk48.json');\nconst WIDTH = 480;\nconst HEIGHT = 480;\n\nclass CameraFaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: null,\n      inputDeviceVideo: 0\n    };\n  }\n\n  componentWillMount() {\n    this.setInputDevice();\n    this.matcher();\n  }\n\n  setInputDevice = () => {\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\n      let inputDevice = await devices.filter(\n        device => device.kind === 'videoinput'\n      );\n      await this.setState({ inputDeviceVideo: inputDevice.length });\n      if (inputDevice.length < 2) {\n        await this.setState({\n          facingMode: 'user'\n        });\n      } else {\n        await this.setState({\n          facingMode: { exact: 'environment' }\n        });\n      }\n      this.startCapture();\n    });\n  };\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(bnk48JSON);\n    this.setState({ faceMatcher });\n  };\n\n  startCapture = () => {\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1000);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    if (!!this.webcam.current) {\n      await getFullFaceDescription(this.webcam.current.getScreenshot()).then(\n        fullDesc => this.setState({ fullDesc })\n      );\n    }\n  };\n\n  render() {\n    const { fullDesc, faceMatcher, facingMode, inputDeviceVideo } = this.state;\n    let videoConstraints = null;\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode\n      };\n    }\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <p>Number of Camera: {inputDeviceVideo}</p>\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT,\n            marginTop: 10,\n            border: 'solid'\n          }}\n        >\n          <div style={{ position: 'relative', width: WIDTH }}>\n            {!!videoConstraints ? (\n              <div style={{ position: 'absolute' }}>\n                <Webcam\n                  audio={false}\n                  width={WIDTH}\n                  height={HEIGHT}\n                  ref={this.webcam}\n                  screenshotFormat=\"image/jpeg\"\n                  videoConstraints={videoConstraints}\n                />\n              </div>\n            ) : null}\n            {!!fullDesc ? (\n              <DrawBox\n                fullDesc={fullDesc}\n                faceMatcher={faceMatcher}\n                imageWidth={WIDTH}\n                boxColor={'blue'}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CameraFaceDetect);\n","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h3>BNK48 Facial Recognition App</h3>\n        <a href=\"https://github.com/supachaic/bnk48-face-recognition\">\n          My Repo\n        </a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"Navbar\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/photo\">Photo Input</Link>\n          <Link to={{ pathname: '/camera-front', state: 'front' }}>\n            Video Camera\n          </Link>\n          {/* <Link to={{ pathname: '/camera-back', state: 'back' }}>\n            Back Camera\n          </Link> */}\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport FaceRecognition from './components/faceRecognition';\nimport CameraFaceDetect from './components/cameraFaceDetect';\nimport Home from './components/Home';\nimport Header from './components/Header';\n//import { createBrowserHistory } from 'history';\nimport './App.css';\n\n// var hist = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"route\">\n            <Header />\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/photo\" component={FaceRecognition} />\n            <Route exact path=\"/camera-front\" component={CameraFaceDetect} />\n            <Route exact path=\"/camera-back\" component={CameraFaceDetect} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}